kind: pipeline
name: docker

trigger:
  branch:
    - release

workspace:
  path: /go/src/github.com/open-beagle/kubevirt-manager

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: node
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/node:v20-alpine
    commands:
      - bash .beagle/build.sh

  - name: kubectl-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/kubectl:v1.30.5-beagle-amd64
    environment:
      TARGET_ARCH: amd64
    commands:
      - mkdir -p dist/bin
      - cp /usr/local/bin/kubectl dist/bin/kubectl-$TARGET_ARCH

  - name: kubectl-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/kubectl:v1.30.5-beagle-arm64
    environment:
      TARGET_ARCH: arm64
    commands:
      - mkdir -p dist/bin
      - cp /usr/local/bin/kubectl dist/bin/kubectl-$TARGET_ARCH

  - name: docker-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry-vpc.cn-qingdao.aliyuncs.com/wod/nginx:1.27-alpine-amd64
      repo: wod/kubevirt-manager
      version: v1.4.1
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry-vpc.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry-vpc.cn-qingdao.aliyuncs.com/wod/nginx:1.27-alpine-arm64
      repo: wod/kubevirt-manager
      version: v1.4.1
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry-vpc.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry-vpc.cn-qingdao.aliyuncs.com/wod/kubevirt-manager:v1.4.1-ARCH
      target: registry-vpc.cn-qingdao.aliyuncs.com/wod/kubevirt-manager:v1.4.1
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

---
kind: pipeline
name: docker-zh

trigger:
  branch:
    - docker-zh

workspace:
  path: /go/src/github.com/open-beagle/kubevirt-manager

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: node
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/node:v20-alpine
    commands:
      - bash .beagle/build.sh

  - name: kubectl-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/kubectl:v1.30.5-beagle-amd64
    environment:
      TARGET_ARCH: amd64
    commands:
      - mkdir -p dist/bin
      - cp /usr/local/bin/kubectl dist/bin/kubectl-$TARGET_ARCH

  - name: kubectl-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/kubectl:v1.30.5-beagle-arm64
    environment:
      TARGET_ARCH: arm64
    commands:
      - mkdir -p dist/bin
      - cp /usr/local/bin/kubectl dist/bin/kubectl-$TARGET_ARCH

  - name: docker-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry-vpc.cn-qingdao.aliyuncs.com/wod/nginx:1.27-alpine-amd64
      repo: wod/kubevirt-manager
      version: v1.4.1-zh
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry-vpc.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry-vpc.cn-qingdao.aliyuncs.com/wod/nginx:1.27-alpine-arm64
      repo: wod/kubevirt-manager
      version: v1.4.1-zh
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry-vpc.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry-vpc.cn-qingdao.aliyuncs.com/wod/kubevirt-manager:v1.4.1-zh-ARCH
      target: registry-vpc.cn-qingdao.aliyuncs.com/wod/kubevirt-manager:v1.4.1-zh
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

---
kind: secret
name: SOCKS5_PROXY
get:
  name: SOCKS5_PROXY
  path: devops-secrets

---
kind: secret
name: REGISTRY_USER_ALIYUN
get:
  name: REGISTRY_USER_ALIYUN
  path: devops-secrets

---
kind: secret
name: REGISTRY_PASSWORD_ALIYUN
get:
  name: REGISTRY_PASSWORD_ALIYUN
  path: devops-secrets

---
kind: secret
name: S3_ACCESS_KEY_ALIYUN
get:
  name: S3_ACCESS_KEY_ALIYUN
  path: devops-secrets

---
kind: secret
name: S3_SECRET_KEY_ALIYUN
get:
  name: S3_SECRET_KEY_ALIYUN
  path: devops-secrets
